#include "pch.h"
#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Base {

public:
int a{ 0 };
// methods always have access to everything inside the class
void display() { cout << a << ", " << b << ", " << c << endl; }

protected: //protecteed only makes sense if you have inheritance
int b{ 0 }; //this is accessible for child classes

private:
int c{ 0 };

};


class Derived: public Base {
//a is public
//b is protected, but I can use
//c is not available - I need a Base Getter and Setter

public:
void AccessBase() {

a = 50; //OK - it's public
b = 60; // OK - It's protected but I can access
/*c = 70;*/ // Error, this is private - not accessible

}

void printBase() {

cout << a << endl;
cout << b << endl;
/*cout << c << endl;*/// I have no access
}

};



int main()
{

Base obj;

obj.a = 100; //Thas fine, because "a" is public
//obj.b = 200; //ERROR - "b" is protected
//obj.c = 300; //ERROR - "c" is private

Derived child;

child.AccessBase();

child.printBase();



system("pause");
return 0;

}
